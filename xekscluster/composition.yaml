apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: x-eks-cluster
spec:
  compositeTypeRef:
    apiVersion: consumable.trustbank.sg/v1alpha1
    kind: xEksCluster
  patchSets:
  - name: region-patchset
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.location"
      toFieldPath: "spec.forProvider.region"
  - name: vpcid-patchset
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.vpcRef
        strategy: string
        string:
          fmt: "%s-xplane-vpc"
      toFieldPath: spec.forProvider.vpcIdRef.name
  resources:
  - name: x-providerconfig-helm
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: ProviderConfig
      metadata:
        name: provider-helm
      spec:
        credentials:
          secretRef:
            name: xplane-eks-cluster-auth
            key: kubeconfig
            namespace: eksac
          source: Secret
        providerConfigRef:
          name: provider-helm
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-helm-%s"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster-auth"
      toFieldPath: spec.credentials.secretRef.name
    readinessChecks:
    - type: NonEmpty
      fieldPath: status.users
  - name: x-providerconfig-kubernetes
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      metadata:
        name: provider-kubernetes
      spec:
        credentials:
          secretRef:
            name: xplane-eks-cluster-auth
            key: kubeconfig
            namespace: eksac
          source: Secret
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster-auth"
      toFieldPath: spec.credentials.secretRef.name
    readinessChecks:
    - type: NonEmpty
      fieldPath: status.users
  - name: x-private-subnet-z1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: xplane-private-subnet-1a
      spec:
        deletionPolicy: Delete
        forProvider:
          region: ap-southeast-1
          availabilityZone: ap-southeast-1a
          cidrBlock: 10.0.100.0/24
          tags:
            Name: xplane-private-subnet-1a
            Owner: linus.yong
            Environment: sandbox
            Project: crossplane
          vpcIdRef:
            name: xplane-vpc
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: PatchSet
      patchSetName: vpcid-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1a"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1a"
      toFieldPath: spec.forProvider.tags.Name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.subnets.private.z1Cidr
      toFieldPath: spec.forProvider.cidrBlock
  - name: x-private-subnet-z2
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: xplane-private-subnet-1b
      spec:
        deletionPolicy: Delete
        forProvider:
          region: ap-southeast-1
          availabilityZone: ap-southeast-1b
          cidrBlock: 10.0.101.0/24
          tags:
            Name: xplane-private-subnet-1b
            Owner: linus.yong
            Environment: sandbox
            Project: crossplane
          vpcIdRef:
            name: xplane-vpc
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: PatchSet
      patchSetName: vpcid-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1b"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1b"
      toFieldPath: spec.forProvider.tags.Name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.subnets.private.z2Cidr
      toFieldPath: spec.forProvider.cidrBlock
  - name: x-private-subnet-z3
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: xplane-private-subnet-1c
      spec:
        deletionPolicy: Delete
        forProvider:
          region: ap-southeast-1
          availabilityZone: ap-southeast-1c
          cidrBlock: 10.0.102.0/24
          tags:
            Name: xplane-private-subnet-1c
            Owner: linus.yong
            Environment: sandbox
            Project: crossplane
          vpcIdRef:
            name: xplane-vpc
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: PatchSet
      patchSetName: vpcid-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1c"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1c"
      toFieldPath: spec.forProvider.tags.Name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.subnets.private.z3Cidr
      toFieldPath: spec.forProvider.cidrBlock
  - name: x-iam-eks
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: xplane-eks-iam
      spec:
        deletionPolicy: Delete
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "eks.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
          managedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          tags:
            Name: xplane-eks-iam
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-iam"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-iam"
      toFieldPath: spec.forProvider.tags.Name
  - name: x-securitygroup-eks-cluster
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      metadata:
        name: xplane-eks-sg-cluster
      spec:
        deletionPolicy: Delete
        forProvider:
          name: xplane-eks-sg-cluster
          description: "Security Group for EKS Control Plane"
          region: ap-southeast-1
          vpcIdRef:
            name: xplane-vpc
          tags:
            Name: xplane-eks-sg-cluster
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
      patchSetName: vpcid-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: spec.forProvider.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: spec.forProvider.tags.Name
  - name: x-sg-ingress-eks-cluster
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupIngressRule
      metadata:
        name: xplane-eks-sg-ingress-cluster
      spec:
        deletionPolicy: Delete
        forProvider:
          description: "Allow woker node to communicate with cluster API server"
          region: ap-southeast-1
          fromPort: 443
          toPort: 443
          ipProtocol: tcp
          referencedSecurityGroupIdRef:
            name: xplane-eks-sg-node
          securityGroupIdRef:
            name: xplane-eks-sg-cluster
          tags:
            Name: xplane-eks-sg-ingress-cluster
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-cluster"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-cluster"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: spec.forProvider.securityGroupIdRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.referencedSecurityGroupIdRef.name
  - name: x-sg-egress-eks-cluster
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupEgressRule
      metadata:
        name: xplane-eks-sg-egress-cluster
      spec:
        deletionPolicy: Delete
        forProvider:
          description: "Allow woker node to communicate with cluster API server"
          region: ap-southeast-1
          fromPort: 1024
          toPort: 65535
          ipProtocol: tcp
          referencedSecurityGroupIdRef:
            name: xplane-eks-sg-node
          securityGroupIdRef:
            name: xplane-eks-sg-cluster
          tags:
            Name: xplane-eks-sg-egress-cluster
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-egress-cluster"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-egress-cluster"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: spec.forProvider.securityGroupIdRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.referencedSecurityGroupIdRef.name
  - name: x-securitygroup-eks-node
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      metadata:
        name: xplane-eks-sg-node
      spec:
        deletionPolicy: Delete
        forProvider:
          name: xplane-eks-sg-node
          description: "Security Group for EKS Nodes"
          region: ap-southeast-1
          vpcIdRef:
            name: xplane-vpc
          tags:
            Name: xplane-eks-sg-node
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
      patchSetName: vpcid-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.tags.Name
  - name: x-sg-ingress-eks-node-to-node
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupIngressRule
      metadata:
        name: xplane-eks-sg-ingress-node-to-node
      spec:
        deletionPolicy: Delete
        forProvider:
          description: "Allow woker node to communicate with each others"
          region: ap-southeast-1
          ipProtocol: "-1"
          referencedSecurityGroupIdRef:
            name: x-securitygroup-eks-node
          securityGroupIdRef:
            name: x-securitygroup-eks-node
          tags:
            Name: xplane-eks-sg-ingress-node-to-node
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-node-to-node"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-node-to-node"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.securityGroupIdRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.referencedSecurityGroupIdRef.name
  - name: x-sg-ingress-eks-cluster-to-node
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupIngressRule
      metadata:
        name: xplane-eks-sg-ingress-cluster-to-node
      spec:
        deletionPolicy: Delete
        forProvider:
          description: "Allow Control Plane to communicate with Workers"
          region: ap-southeast-1
          fromPort: 1025
          toPort: 65535
          ipProtocol: tcp
          referencedSecurityGroupIdRef:
            name: xplane-eks-sg-cluster
          securityGroupIdRef:
            name: xplane-eks-sg-node
          tags:
            Name: xplane-eks-sg-ingress-node-to-node
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-cluster-to-node"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-ingress-cluster-to-node"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.securityGroupIdRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-cluster"
      toFieldPath: spec.forProvider.referencedSecurityGroupIdRef.name
  - name: x-sg-egress-eks-node
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroupEgressRule
      metadata:
        name: xplane-eks-sg-egress-node
      spec:
        deletionPolicy: Delete
        forProvider:
          description: "Allow woker node to communicate out"
          region: ap-southeast-1
          cidrIpv4: 0.0.0.0/0
          ipProtocol: "-1"
          securityGroupIdRef:
            name: xplane-eks-sg-node
          tags:
            Name: xplane-eks-sg-egress-node
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-ec2
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-egress-node"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-egress-node"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.securityGroupIdRef.name
  - name: x-eks-cluster
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Cluster
      metadata:
        name: xplane-eks-cluster
      spec:
        deletionPolicy: Delete
        forProvider:
          region: ap-southeast-1
          roleArnRef:
            name: xplane-eks-iam
          version: "1.30"
          vpcConfig:
          - endpointPrivateAccess: true
            endpointPublicAccess: true
            subnetIdRefs:
            - name: xplane-private-subnet-1a
            - name: xplane-private-subnet-1b
            - name: xplane-private-subnet-1c
            securityGroupIdSelector:
              matchControllerRef: true
          tags:
            Name: xplane-eks-cluster
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-iam"
      toFieldPath: spec.forProvider.roleArnRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.eks.version
      toFieldPath: spec.forProvider.version
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1a"
      toFieldPath: spec.forProvider.vpcConfig[0].subnetIdRefs[0].name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1b"
      toFieldPath: spec.forProvider.vpcConfig[0].subnetIdRefs[1].name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1c"
      toFieldPath: spec.forProvider.vpcConfig[0].subnetIdRefs[2].name
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
      toFieldPath: status.oidcIssuer
      transforms:
      - type: string
        string:
          type: TrimPrefix
          trim: 'https://'
  - name: x-eks-addon-coredns
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Addon
      metadata:
        name: xplane-eks-addon-coredns
      spec:
        forProvider:
          region: ap-southeast-1
          addonName: coredns
          addonVersion: v1.11.1-eksbuild.9
          configurationValues: |
            {"replicaCount":1}
          clusterNameRef:
            name: xplane-eks-cluster
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-addon-coredns"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.corednsAddOn.version
      toFieldPath: spec.forProvider.addonVersion
  - name: x-eks-addon-vpc-cni
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Addon
      metadata:
        name: xplane-eks-addon-vpc-cni
      spec:
        forProvider:
          region: ap-southeast-1
          addonName: vpc-cni
          addonVersion: v1.18.2-eksbuild.1
          clusterNameRef:
            name: xplane-eks-cluster
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-addon-vpc-cni"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.vpccniAddOn.version
      toFieldPath: spec.forProvider.addonVersion
  - name: x-eks-addon-kube-proxy
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Addon
      metadata:
        name: xplane-eks-addon-kube-proxy
      spec:
        forProvider:
          region: ap-southeast-1
          addonName: kube-proxy
          addonVersion: v1.30.0-eksbuild.3
          clusterNameRef:
            name: xplane-eks-cluster
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-addon-kube-proxy"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.kubeproxyAddOn.version
      toFieldPath: spec.forProvider.addonVersion
  - name: x-iam-ebs-csi
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: xplane-ebs-csi-iam
      spec:
        deletionPolicy: Delete
        forProvider:
          managedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
          tags:
            Name: xplane-ebs-csi-iam
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-ebs-csi-iam"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-ebs-csi-iam"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: status.oidcIssuer
        - fromFieldPath: status.oidcIssuer
        - fromFieldPath: status.oidcIssuer
        strategy: string
        string: 
          fmt: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                          "StringEquals": {
                              "%s:aud": "sts.amazonaws.com",
                              "%s:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                          }
                      }
                  }
              ]
            }
      toFieldPath: spec.forProvider.assumeRolePolicy
      policy:
        fromFieldPath: Required
  - name: x-eks-addon-ebs-csi
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Addon
      metadata:
        name: xplane-eks-addon-ebs-csi
      spec:
        forProvider:
          region: ap-southeast-1
          addonName: aws-ebs-csi-driver
          addonVersion: v1.31.0-eksbuild.1
          clusterNameRef:
            name: xplane-eks-cluster
          serviceAccountRoleArnRef:
            name: xplane-ebs-csi-iam
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-addon-ebs-csi"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-ebs-csi-iam"
      toFieldPath: spec.forProvider.serviceAccountRoleArnRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.ebscsiAddOn.version
      toFieldPath: spec.forProvider.addonVersion
  - name: x-eks-addob-ebs-csi-deployment-replica
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        annotations:
          crossplane.io/external-name: ebs-csi-controller
      spec:
        deletionPolicy: Orphan
        forProvider:
          manifest:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              namespace: kube-system
              name: ebs-csi-controller
            spec:
              replicas: 1
        managementPolicies:
        - Observe
        - Create
        - Update
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-eks-cluster-auth
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: ClusterAuth
      metadata:
        name: xplane-eks-cluster-auth
      spec:
        forProvider:
          clusterNameRef:
            name: xplane-eks-cluster
          region: ap-southeast-1
        writeConnectionSecretToRef:
          name: xplane-eks-cluster-auth
          namespace: eksac
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster-auth"
      toFieldPath: spec.writeConnectionSecretToRef.name
  - name: x-oidc-provider
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: OpenIDConnectProvider
      metadata:
        name: xplane-oidc-provider
      spec:
        deletionPolicy: Delete
        forProvider:
          clientIdList:
          - sts.amazonaws.com
          thumbprintList:
          - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
          tags:
            Name: xplane-oidc-provider
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-oidc-provider"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-oidc-provider"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: status.oidcIssuer
        strategy: string
        string:
          fmt: "https://%s"
      toFieldPath: spec.forProvider.url
      policy:
        fromFieldPath: Required
  - name: x-iam-fargate-pod
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: xplane-fargate-pod-iam
      spec:
        deletionPolicy: Delete
        forProvider:
          assumeRolePolicy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "eks-fargate-pods.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
          managedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
          tags:
            Name: xplane-fargate-pod-iam
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-fargate-pod-iam"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-fargate-pod-iam"
      toFieldPath: spec.forProvider.tags.Name
  - name: x-fargate-profile
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: FargateProfile
      metadata:
        name: xplane-fargate-profile
      spec:
        deletionPolicy: Delete
        forProvider:
          clusterNameRef:
            name:  xplane-eks-cluster
          podExecutionRoleArnRef:
            name: xplane-eks-fargate-pod-iam
          region: ap-southeast-1
          selector:
            - namespace: karpenter
              labels:
                app.kubernetes.io/name: karpenter
          subnetIdRefs:
            - name: xplane-private-subnet-1a
            - name: xplane-private-subnet-1b
            - name: xplane-private-subnet-1c
          tags:
            Name: xplane-fargate-profile
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-eks
    patches:
    - type: PatchSet
      patchSetName: region-patchset
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-fargate-profile"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-fargate-profile"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.clusterNameRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-fargate-pod-iam"
      toFieldPath: spec.forProvider.podExecutionRoleArnRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1a"
      toFieldPath: spec.forProvider.subnetIdRefs[0].name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1b"
      toFieldPath: spec.forProvider.subnetIdRefs[1].name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-1c"
      toFieldPath: spec.forProvider.subnetIdRefs[2].name
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.karpenterFargateStatus
  - name: x-iam-karpenter-policy
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Policy
      metadata:
        name: xplane-karpenter-policy
      spec:
        deletionPolicy: Delete
        forProvider:
          tags:
            Name: xplane-karpenter-policy
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-policy"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-policy"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: spec.name
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: spec.name
        strategy: string
        string: 
          fmt: |
            {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "pricing:GetProducts",
                    "iam:TagInstanceProfile",
                    "iam:PassRole",
                    "iam:GetInstanceProfile",
                    "iam:CreateInstanceProfile",
                    "iam:AddRoleToInstanceProfile",
                    "ec2:TerminateInstances",
                    "ec2:RunInstances",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSpotPriceHistory",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeLaunchTemplates",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInstanceTypes",
                    "ec2:DescribeInstanceTypeOfferings",
                    "ec2:DescribeImages",
                    "ec2:DescribeAvailabilityZones",
                    "ec2:DeleteLaunchTemplate",
                    "ec2:CreateTags",
                    "ec2:CreateLaunchTemplate",
                    "ec2:CreateFleet"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "Karpenter"
                },
                {
                  "Action": "ec2:TerminateInstances",
                  "Condition": {
                    "StringLike": {
                      "ec2:ResourceTag/Name": "*karpenter*"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "ConditionalEC2Termination"
                },
                {
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:GetQueueUrl",
                    "sqs:GetQueueAttributes",
                    "sqs:DeleteMessage"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "KarpenterSQS"
                },
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::%s:role/%s-xplane-eks-cluster",
                  "Sid": "PassNodeIAMRole"
                },
                {
                  "Action": "eks:DescribeCluster",
                  "Effect": "Allow",
                  "Resource": "arn:aws:eks:ap-southeast-1:%s:cluster/%s-xplane-eks-cluster",
                  "Sid": "EKSClusterEndpointLookup"
                }
              ],
              "Version": "2012-10-17"
            }
      toFieldPath: spec.forProvider.policy
  - name: x-iam-karpenter
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: xplane-karpenter-iam
      spec:
        deletionPolicy: Delete
        forProvider:
          tags:
            Name: xplane-karpenter-iam
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-iam"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-iam"
      toFieldPath: spec.forProvider.tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: status.oidcIssuer
        - fromFieldPath: status.oidcIssuer
        strategy: string
        string: 
          fmt: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                          "StringEquals": {
                              "%s:sub": "system:serviceaccount:karpenter:karpenter"
                          }
                      }
                  }
              ]
            }
      toFieldPath: spec.forProvider.assumeRolePolicy
      policy:
        fromFieldPath: Required
  - name: x-iam-karpenter-policy-attachment
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: xplane-karpenter-policy-attachment
      spec:
        deletionPolicy: Delete
        forProvider:
          policyArnRef:
            name: xplane-karpenter-policy
          roleRef:
            name: xplane-karpenter-iam
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-policy-attachment"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-policy"
      toFieldPath: spec.forProvider.policyArnRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-iam"
      toFieldPath: spec.forProvider.roleRef.name
  - name: x-iam-karpenter-node
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        name: xplane-karpenter-node-iam
      spec:
        deletionPolicy: Delete
        forProvider:
          assumeRolePolicy: |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            }
          managedPolicyArns:
            - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
          tags:
            Name: xplane-karpenter-node-iam
            Owner: linus.yong
            Environment: sandbox
        providerConfigRef:
          name: provider-aws-iam
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-node-iam"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-node-iam"
      toFieldPath: spec.forProvider.tags.Name
  - name: x-aws-auth-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: 
        annotations:
          crossplane.io/external-name: aws-auth
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: aws-auth
              namespace: kube-system
            data:
              mapRoles: |
                TO_BE_REPLACED
        managementPolicies:
        - Observe
        - Create
        - Update
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-aws-auth-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: spec.name
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: spec.name
        strategy: string
        string: 
          fmt: |
            - groups:
              - system:bootstrappers
              - system:nodes
              rolearn: arn:aws:iam::%s:role/%s-xplane-karpenter-node-iam
              username: system:node:{{EC2PrivateDNSName}}
            - groups:
              - system:bootstrappers
              - system:nodes
              - system:node-proxier
              rolearn: arn:aws:iam::%s:role/%s-xplane-fargate-pod-iam
              username: system:node:{{SessionName}}
      toFieldPath: spec.forProvider.manifest.data.mapRoles
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-helm-karpenter
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata:
        name: xplane-helm-karpenter
        annotations:
          crossplane.io/external-name: karpenter
      spec:
        forProvider:
          chart:
            name: karpenter
            repository: oci://public.ecr.aws/karpenter
            version: "0.37.0"
          namespace: karpenter
          set:
          - name: serviceAccount.annotations.eks\.amazonaws\.com/role-arn
            value: arn:aws:iam::390945758345:role/linus-cluster-xplane-karpenter-iam
          - name: settings.clusterName
            value: linus-cluster-xplane-eks-cluster
          - name: serviceAccount.name
            value: karpenter
          - name: dnsPolicy
            value: Default
          - name: replicas
            value: "1"
          wait: true
        providerConfigRef:
          name: provider-helm
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-helm-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.awsAccountId
        - fromFieldPath: spec.name
        strategy: string
        string: 
          fmt: arn:aws:iam::%s:role/%s-xplane-karpenter-iam
      toFieldPath: spec.forProvider.set[0].value
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-cluster"
      toFieldPath: spec.forProvider.set[1].value
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-helm-%s"
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: status.karpenterFargateStatus
      toFieldPath: metadata.labels["karpenterFargateStatus"]
      policy:
        fromFieldPath: Required
    - type: FromCompositeFieldPath
      fromFieldPath: spec.components.karpenterHelm.version
      toFieldPath: spec.forProvider.chart.version
  - name: x-ec2nc-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-ec2nc-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: karpenter.k8s.aws/v1beta1
            kind: EC2NodeClass
            metadata:
              name: default
            spec:
              amiFamily: Bottlerocket
              blockDeviceMappings:
              - deviceName: /dev/xvdb
                ebs:
                  deleteOnTermination: true
                  volumeSize: 100Gi
                  volumeType: gp3
              metadataOptions:
                httpEndpoint: enabled
                httpProtocolIPv6: disabled
                httpPutResponseHopLimit: 2
                httpTokens: required
              role: xplane-karpenter-node-iam
              securityGroupSelectorTerms:
              - tags:
                  Name: xplane-eks-sg-node
              subnetSelectorTerms:
              - tags:
                  Name: xplane-private-subnet-*
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-ec2nc-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-karpenter-node-iam"
      toFieldPath: spec.forProvider.manifest.spec.role
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-eks-sg-node"
      toFieldPath: spec.forProvider.manifest.spec.securityGroupSelectorTerms[0].tags.Name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-private-subnet-*"
      toFieldPath: spec.forProvider.manifest.spec.subnetSelectorTerms[0].tags.Name
  - name: x-arm64-nodepool-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-arm64-nodepool-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: karpenter.sh/v1beta1
            kind: NodePool
            metadata:
              name: arm64
            spec:
              disruption:
                consolidationPolicy: WhenUnderutilized
                expireAfter: 2h
              template:
                metadata:
                  labels:
                    managed-by: karpenter
                spec:
                  nodeClassRef:
                    name: default
                  requirements:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - arm64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
                  - key: karpenter.sh/capacity-type
                    operator: In
                    values:
                    - spot
              weight: 50
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-arm64-nodepool-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-amd64-nodepool-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-amd64-nodepool-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: karpenter.sh/v1beta1
            kind: NodePool
            metadata:
              name: amd64
            spec:
              disruption:
                consolidationPolicy: WhenUnderutilized
                expireAfter: 2h
              template:
                metadata:
                  labels:
                    managed-by: karpenter
                spec:
                  nodeClassRef:
                    name: default
                  requirements:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - amd64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
                  - key: karpenter.sh/capacity-type
                    operator: In
                    values:
                    - spot
              weight: 10
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-amd64-nodepool-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-role-restart-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-role-restart-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              name: karpenter-restart
              namespace: karpenter
            rules:
              - apiGroups: ["apps", "extensions"]
                resources: ["deployments"]
                resourceNames: ["linus-cluster-xplane-helm-karpenter"]
                verbs: ["get", "patch", "list", "watch"]
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-role-restart-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-helm-karpenter"
      toFieldPath: spec.forProvider.manifest.rules[0].resourceNames[0]
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-sa-restart-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-sa-restart-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: karpenter-restart
              namespace: karpenter
            automountServiceAccountToken: true
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-sa-restart-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-rolebinding-restart-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-rolebinding-restart-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: karpenter-restart
              namespace: karpenter
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: Role
              name: karpenter-restart
            subjects:
              - kind: ServiceAccount
                name: karpenter-restart
                namespace: karpenter
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-rolebinding-restart-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name
  - name: x-cronjob-restart-karpenter
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      metadata:
        name: xplane-cronjob-restart-karpenter
      spec:
        forProvider:
          manifest:
            apiVersion: batch/v1
            kind: CronJob
            metadata:
              name: karpenter-restart
              namespace: karpenter
            spec:
              successfulJobsHistoryLimit: 1
              failedJobsHistoryLimit: 2
              concurrencyPolicy: Forbid
              schedule: '0 */1 * * *'
              jobTemplate:
                spec:
                  backoffLimit: 2 
                  activeDeadlineSeconds: 600 
                  ttlSecondsAfterFinished: 120
                  template:
                    spec:
                      serviceAccountName: karpenter-restart
                      restartPolicy: Never
                      containers:
                        - name: kubectl
                          image: bitnami/kubectl 
                          command: ["kubectl"]
                          args: ["rollout", "restart", "deployment/linus-cluster-xplane-helm-karpenter"]
        managementPolicies:
        - Observe
        - Create
        - Update
        - Delete
        providerConfigRef:
          name: provider-kubernetes
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "%s-xplane-cronjob-restart-karpenter"
      toFieldPath: metadata.name
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "deployment/%s-xplane-helm-karpenter"
      toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].args[2]
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.name
        strategy: string
        string:
          fmt: "provider-kubernetes-%s"
      toFieldPath: spec.providerConfigRef.name